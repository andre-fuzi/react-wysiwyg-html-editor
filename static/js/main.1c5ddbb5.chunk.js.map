{"version":3,"sources":["_components/ckeditor/index.js","_components/react-quill/index.js","_components/suneditor/index.js","_components/jsoneditor-react/index.js","_components/react-json-viewer/index.js","App.js","index.js"],"names":["CKEditor","disableAutoInline","Component","EditorPreview","className","this","props","data","dangerouslySetInnerHTML","__html","defaultProps","CKEditorApp","ReactQuillApp","SunEditorApp","JSONEditorReact","state","updatedData","value","handleChange","bind","evt","setState","JSON","stringify","console","log","href","target","style","width","display","flexFlow","justifyContent","heigth","parse","onChange","ace","mode","allowedModes","htmlElementProps","height","ReactJosnView","dataUpdate","updated_src","src","onEdit","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c5ddbb5.chunk.js","sourcesContent":["// import React, { Component } from 'react';\n// import CKEditor from 'ckeditor4-react';\n\n// class CKEditorApp extends Component {\n//     render() {\n//         return (\n//             <div className=\"content\">\n//                 <h2>CKEditor</h2>\n//                 <CKEditor\n//                   data=\"<p>Hello from CKEditor 4!</p>\"\n//                   config={ {\n//                     language: 'pt-BR',\n//                     toolbar:[ { name: 'clipboard', items: [  'Undo', 'Redo', '-', 'Cut', 'Copy', 'Paste'] },\n//                     { name: 'basicstyles', items: [ 'Bold', 'Italic', 'Underline', 'Subscript', 'Superscript', 'RemoveFormat'] },\n//                     { name: 'format', items: [ 'Format', 'List' ]} ],\n//                     removeButtons: ''\n//                   } }\n//                 />\n//             </div>\n//         );\n//     }\n// }\n\n// export default CKEditorApp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CKEditor from 'ckeditor4-react';\nCKEditor.disableAutoInline = true;\n\n\nclass CKEditorApp extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            data: '<p>React is really <em>nice</em>!</p>'\n        };\n\n        this.onEditorChange = this.onEditorChange.bind( this );\n    }\n\n    onEditorChange( evt ) {\n        this.setState( {\n            data: evt.editor.getData()\n        } );\n    }\n\n    render() {\n        return (\n            <div className='editor-app'>\n              <h2>CKEditor</h2>\n              <a className='site' href='https://ckeditor.com/ckeditor-4/' target='_blank'>acessar site</a>\n                <CKEditor\n                    data={this.state.data}\n                    config={ {\n                      language: 'pt-BR',\n                      toolbar:[ { name: 'clipboard', items: [  'Undo', 'Redo'] },\n                      { name: 'basicstyles', items: [ 'Bold', 'Italic', 'Underline', 'Subscript', 'Superscript', 'RemoveFormat'] },\n                      { name: 'format', items: [ 'Link', 'Format', 'List']} ],\n                      removeButtons: ''\n                    } }\n                    disableAutoInline={true}\n                    disableAutoInline='true'\n                    type=\"classic\"\n                    onChange={this.onEditorChange} />\n                    <EditorPreview data={this.state.data} />\n            </div>\n        );\n    }\n}\n\nclass EditorPreview extends Component {\n    render() {\n        return (\n            <div className=\"editor-preview\">\n                <p className='editor-type'>HTML output</p>\n                <div className=\"editor-result\">{this.props.data}</div>\n                <p className='editor-type'>Formated Output</p>\n                <div className=\"editor-result\" dangerouslySetInnerHTML={ { __html: this.props.data } }></div>\n            </div>\n        );\n    }\n}\n\nEditorPreview.defaultProps = {\n    data: ''\n};\n\nEditorPreview.propTypes = {\n    data: PropTypes.string\n};\n\nexport default CKEditorApp;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nclass ReactQuillApp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { text: '<p>Quill is really <em>nice!</em></p>' } // You can also pass a Quill Delta here\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(value) {\n    this.setState({ text: value })\n  }\n\n  modules = {\n    toolbar: [\n      ['bold', 'italic', 'underline','strike'],\n      [{ 'script': 'sub'}, { 'script': 'super' }],\n      ['clean'],\n      ['link'],\n      [{ 'header': [1, 2, false] }],\n    ],\n  }\n\n  render() {\n    return (\n      <div className='editor-app'>\n        <h2>ReactQuill</h2>\n        <a className='site' href='https://github.com/zenoamaro/react-quill' target='_blank'>acessar site</a>\n        <ReactQuill value={this.state.text}\n          placeholder= 'Compose an epic...'\n          theme= 'snow'\n          modules={this.modules}\n          onChange={this.handleChange} />\n        <EditorPreview data={this.state.text} />\n      </div>\n    );\n  }\n}\n\nclass EditorPreview extends Component {\n  render() {\n      return (\n          <div className=\"editor-preview\">\n              <p className='editor-type'>HTML output</p>\n              <div className=\"editor-result\">{this.props.data}</div>\n              <p className='editor-type'>Formated Output</p>\n              <div className=\"editor-result\" dangerouslySetInnerHTML={ { __html: this.props.data } }></div>\n          </div>\n      );\n  }\n}\n\nEditorPreview.defaultProps = {\n  data: ''\n};\n\nEditorPreview.propTypes = {\n  data: PropTypes.string\n};\n\nexport default ReactQuillApp","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nclass SunEditorApp extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { text: '<p>SunEditor is really <em>nice!</em></p>' } // You can also pass a Quill Delta here\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(value) {\n    this.setState({ text: value })\n  }\n\n  config = {\n    buttonList: [\n      ['undo', 'redo', 'formatBlock'],\n      ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript', 'removeFormat'],\n      ['link']\n    ]\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='editor-app'>\n          <h2>SunEditor</h2>\n          <a className='site' href='http://suneditor.com/' target='_blank'>acessar site</a>\n          <SunEditor \n            setOptions={this.config}\n            setContents={this.state.text}\n            placeholder=\"Please type here...\"\n            onChange={this.handleChange}/>\n          <EditorPreview data={this.state.text} />\n        </div>\n      </div>\n    );\n  }\n};\n\nclass EditorPreview extends Component {\n  render() {\n      return (\n          <div className=\"editor-preview\">\n              <p className='editor-type'>HTML output</p>\n              <div className=\"editor-result\">{this.props.data}</div>\n              <p className='editor-type'>Formated Output</p>\n              <div className=\"editor-result\" dangerouslySetInnerHTML={ { __html: this.props.data } }></div>\n          </div>\n      );\n  }\n}\n\nEditorPreview.defaultProps = {\n  data: ''\n};\n\nEditorPreview.propTypes = {\n  data: PropTypes.string\n};\n\nexport default SunEditorApp;","import React, { Component } from 'react';\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\n\nclass JSONEditorReact extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      updatedData: this.props.value\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(evt) {\n    this.setState({\n      updatedData: JSON.stringify(evt)\n    },\n      console.log('========', this.state.updatedData)\n    )\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <div className='editor-app'>\n        <h2>JSONEditorReact</h2>\n        <a className='site' href='https://github.com/vankop/jsoneditor-react' target='_blank'>acessar site</a>\n        <div style={{ width: '100%', display: 'flex', flexFlow: 'row nowrap', justifyContent: 'space-between' }}>\n          <div style={{ width: '48%', heigth: 1100 }}>\n            <h3>Editable Data</h3>\n            <Editor\n              value={JSON.parse(value)}\n              onChange={this.handleChange}\n              ace={ace}\n              mode=\"code\"\n              allowedModes={[\"code\", \"tree\", \"form\"]}\n              htmlElementProps={{ style: { height: 500 } }}\n            />\n          </div>\n          <div style={{ width: '48%', height: 500 }}>\n            <h3>View only</h3>\n            <Editor\n              value={JSON.parse(this.state.updatedData)}\n              mode=\"view\"\n              htmlElementProps={{ style: { height: 500 } }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JSONEditorReact","import ReactJson from 'react-json-view'\nimport React, { Component } from 'react';\n\nclass ReactJosnView extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      dataUpdate: this.props.value\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(evt) {\n    this.setState({\n      dataUpdate: JSON.stringify(evt.updated_src)\n    },\n      console.log('========', this.state.dataUpdate)\n    )\n  }\n\n  render() {\n    const { value } = this.props\n    return (\n      <div className='editor-app'>\n        <h2>ReactJosnView</h2>\n        <a className='site' href='https://www.npmjs.com/package/react-json-view' target='_blank'>acessar site</a>\n        <div style={{ width: '100%', display: 'flex', flexFlow: 'row nowrap', justifyContent: 'space-between' }}>\n          <div style={{ width: '48%', heigth: 1100 }}>\n            <h3>Editable Data</h3>\n            <ReactJson\n              src={JSON.parse(this.state.dataUpdate)}\n              onEdit={this.handleChange} />\n          </div>\n          <div style={{ width: '48%', heigth: 1100 }}>\n            <h3>View Only</h3>\n            <ReactJson\n              src={JSON.parse(this.state.dataUpdate)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReactJosnView\n","import React from 'react';\nimport CKEditor from './_components/ckeditor';\nimport ReactQuill from './_components/react-quill'\nimport SunEditor from './_components/suneditor'\nimport JSONEditorReact from './_components/jsoneditor-react'\nimport ReactJosnView from './_components/react-json-viewer'\n\nimport \"./style.css\"\n\nfunction App() {\n  const data = '{\"name\":\"Jeremy Dorn\",\"age\":25,\"favorite_color\":\"#ffa500\",\"gender\":\"male\",\"date\":\"\",\"location\":{\"city\":\"San Francisco\",\"state\":\"CA\",\"citystate\":\"San Francisco, CA\"},\"pets\":[{\"type\":\"dog\",\"name\":\"Walter\"}]}';\n\n  return (\n    <div className=\"App\">\n      <h1>WYSIWYG HTML Editors</h1>\n\n      <div className=\"container\">\n        <JSONEditorReact value={data} />\n        <ReactJosnView value={data} />\n        {/* <CKEditor />\n        <ReactQuill />\n        <SunEditor /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}